name: Public to website
on:
  push:
    branches: [master]

jobs:
  gh-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Get pip cache dir
        id: pip-get-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - uses: actions/cache@v2
        id: pip-cache
        with:
          path: ${{ steps.pip-get-cache.outputs.dir }}
          key: deploy-${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            deploy-${{ runner.os }}-pip-
      - name: Install dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: pip install -r website/scripts/requirements.txt
      - name: Generate post from jupyter notebook
        run: python website/scripts/parse_notebook.py
      - uses: actions/setup-node@v2
        with:
          cache: npm
          cache-dependency-path: "**/package-lock.json"
      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: |
            website/node_modules
          key: deploy-${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            deploy-${{ runner.os }}-node-modules-
      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}
        run: |
          git config --global user.email "zootopibot@gmail.com"
          git config --global user.name "ZootoPi bot"
      - name: Install node dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          cd website
          if [ -e package-lock.json ]; then
            npm ci --prefer-offline
          else
            npm i
          fi
      - name: Release to GitHub Pages
        env:
          USE_SSH: true
          GIT_USER: git
          DEPLOYMENT_BRANCH: gh-pages
        run: |
          cd website
          npm run deploy
