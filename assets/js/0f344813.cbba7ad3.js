"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2342],{3905:(n,t,e)=>{e.d(t,{Zo:()=>u,kt:()=>d});var a=e(7294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function l(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function p(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)e=i[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)e=i[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var o=a.createContext({}),c=function(n){var t=a.useContext(o),e=t;return n&&(e="function"==typeof n?n(t):l(l({},t),n)),e},u=function(n){var t=c(n.components);return a.createElement(o.Provider,{value:t},n.children)},h={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,i=n.originalType,o=n.parentName,u=p(n,["components","mdxType","originalType","parentName"]),s=c(e),d=r,g=s["".concat(o,".").concat(d)]||s[d]||h[d]||i;return e?a.createElement(g,l(l({ref:t},u),{},{components:e})):a.createElement(g,l({ref:t},u))}));function d(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var i=e.length,l=new Array(i);l[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=n,p.mdxType="string"==typeof n?n:r,l[1]=p;for(var c=2;c<i;c++)l[c]=e[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,e)}s.displayName="MDXCreateElement"},7337:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=e(7462),r=(e(7294),e(3905));const i={},l="\ud83d\udd25XAI - Th\u1ef1c h\xe0nh Bi\u1ec3u \u0111\u1ed3 Ph\u1ee5 thu\u1ed9c T\u1eebng ph\u1ea7n (PDP)\ud83d\udd25",p={permalink:"/blog/2022/02/15/xai2-thuc-hanh",source:"@site/../blog/2022-02-15-xai2-thuc-hanh.md",title:"\ud83d\udd25XAI - Th\u1ef1c h\xe0nh Bi\u1ec3u \u0111\u1ed3 Ph\u1ee5 thu\u1ed9c T\u1eebng ph\u1ea7n (PDP)\ud83d\udd25",description:"1. T\u1ea1o m\xf4 h\xecnh v\u1edbi b\u1ed9 d\u1eef li\u1ec7u v\u1ec1 gi\xe1 nh\xe0 trung b\xecnh California Housing Dataset",date:"2022-02-15T00:00:00.000Z",formattedDate:"February 15, 2022",tags:[],hasTruncateMarker:!1,authors:[],frontMatter:{},prevItem:{title:"4 m\u1eb9o t\u1eadn d\u1ee5ng t\u1ed1i \u0111a Google Colab",permalink:"/blog/2022/02/17/colab"},nextItem:{title:"XAI - Bi\u1ec3u \u0111\u1ed3 Ph\u1ee5 thu\u1ed9c T\u1eebng ph\u1ea7n",permalink:"/blog/2022/02/14/xai2"}},o={authorsImageUrls:[]},c=[{value:"1. T\u1ea1o m\xf4 h\xecnh v\u1edbi b\u1ed9 d\u1eef li\u1ec7u v\u1ec1 gi\xe1 nh\xe0 trung b\xecnh California Housing Dataset",id:"1-t\u1ea1o-m\xf4-h\xecnh-v\u1edbi-b\u1ed9-d\u1eef-li\u1ec7u-v\u1ec1-gi\xe1-nh\xe0-trung-b\xecnh-california-housing-dataset",level:2},{value:"2. L\u1ef1a ch\u1ecdn nh\u1eefng \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng (feature importance)",id:"2-l\u1ef1a-ch\u1ecdn-nh\u1eefng-\u0111\u1eb7c-tr\u01b0ng-quan-tr\u1ecdng-feature-importance",level:2},{value:"3.1. S\u1eed d\u1ee5ng Scikit-Learn",id:"31-s\u1eed-d\u1ee5ng-scikit-learn",level:3},{value:"3.2. S\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n PDPbox",id:"32-s\u1eed-d\u1ee5ng-th\u01b0-vi\u1ec7n-pdpbox",level:2}],u={toc:c};function h(n){let{components:t,...i}=n;return(0,r.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"1-t\u1ea1o-m\xf4-h\xecnh-v\u1edbi-b\u1ed9-d\u1eef-li\u1ec7u-v\u1ec1-gi\xe1-nh\xe0-trung-b\xecnh-california-housing-dataset"},"1. T\u1ea1o m\xf4 h\xecnh v\u1edbi b\u1ed9 d\u1eef li\u1ec7u v\u1ec1 gi\xe1 nh\xe0 trung b\xecnh California Housing Dataset"),(0,r.kt)("p",null,"California Housing Dataset g\u1ed3m 20640 b\u1ea3n ghi v\u1edbi 8 \u0111\u1eb7c tr\u01b0ng d\u1ef1 \u0111o\xe1n v\xe0 nh\xe3n ",(0,r.kt)("inlineCode",{parentName:"p"},"target"),", trong \u0111\xf3 c\xe1c \u0111\u1eb7c tr\u01b0ng mang \xfd ngh\u0129a nh\u01b0 sau:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u0110\u1eb7c tr\u01b0ng"),(0,r.kt)("th",{parentName:"tr",align:null},"\xdd ngh\u0129a"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MedInc")),(0,r.kt)("td",{parentName:"tr",align:null},"Thu nh\u1eadp trung b\xecnh")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"HouseAge")),(0,r.kt)("td",{parentName:"tr",align:null},"Tu\u1ed5i nh\xe0 trung b\xecnh")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AveRooms")),(0,r.kt)("td",{parentName:"tr",align:null},"S\u1ed1 ph\xf2ng trung b\xecnh")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AveBedrms")),(0,r.kt)("td",{parentName:"tr",align:null},"S\u1ed1 ph\xf2ng ng\u1ee7 trung b\xecnh")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Population")),(0,r.kt)("td",{parentName:"tr",align:null},"S\u1ed1 th\xe0nh vi\xean h\u1ed9 gia \u0111\xecnh trung b\xecnh")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AveOccup")),(0,r.kt)("td",{parentName:"tr",align:null},"S\u1ed1 th\xe0nh vi\xean h\u1ed9 gia \u0111\xecnh trung b\xecnh")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Latitude")),(0,r.kt)("td",{parentName:"tr",align:null},"V\u0129 \u0111\u1ed9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Longitude")),(0,r.kt)("td",{parentName:"tr",align:null},"Kinh \u0111\u1ed9")))),(0,r.kt)("p",null,"\u0110\xe2y l\xe0 t\u1eadp d\u1eef li\u1ec7u c\xf3 s\u1eb5n trong th\u01b0 vi\u1ec7n Sklearn n\xean ch\xfang ta ho\xe0n to\xe0n c\xf3 th\u1ebf g\u1ecdi ra th\xf4ng qua h\xe0m ",(0,r.kt)("inlineCode",{parentName:"p"},"fetch_california_housing()"),". T\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\xe1c b\xe0i to\xe1n h\u1ecdc m\xe1y th\xf4ng th\u01b0\u1eddng, ta chia d\u1eef li\u1ec7u th\xe0nh t\u1eadp hu\u1ea5n luy\u1ec7n v\xe0 t\u1eadp ki\u1ec3m th\u1eed v\xe0 s\u1eed d\u1ee5ng m\xf4 h\xecnh Random Forest \u0111\u1ec3 hu\u1ea5n luy\u1ec7n v\xe0 d\u1ef1 \u0111o\xe1n tr\xean c\u1ea3 2 t\u1eadp d\u1eef li\u1ec7u \u0111\xe3 chia."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.inspection import permutation_importance\nfrom sklearn.metrics import mean_squared_error\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Kh\u1edfi t\u1ea1o d\u1eef li\u1ec7u\nhousing = fetch_california_housing()\nX = pd.DataFrame(housing.data, columns=housing.feature_names)\nY = pd.Series(housing.target)\nX.info()\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20640 entries, 0 to 20639\nData columns (total 8 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   MedInc      20640 non-null  float64\n 1   HouseAge    20640 non-null  float64\n 2   AveRooms    20640 non-null  float64\n 3   AveBedrms   20640 non-null  float64\n 4   Population  20640 non-null  float64\n 5   AveOccup    20640 non-null  float64\n 6   Latitude    20640 non-null  float64\n 7   Longitude   20640 non-null  float64\ndtypes: float64(8)\nmemory usage: 1.3 MB\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Chia d\u1eef li\u1ec7u th\xe0nh t\u1eadp hu\u1ea5n luy\u1ec7n v\xe0 t\u1eadp ki\u1ec3m th\u1eed\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state=42)\n# Kh\u1edfi t\u1ea1o m\xf4 h\xecnh Random Forest\nregr = RandomForestRegressor(max_depth = 5, random_state = 42, n_estimators = 100)\n# Fit d\u1eef li\u1ec7u hu\u1ea5n luy\u1ec7n v\xe0o m\xf4 h\xecnh \u0111\xe3 kh\u1edfi t\u1ea1o\nregr.fit(X_train, Y_train)\n\n# D\u1ef1 \u0111o\xe1n nh\xe3n tr\xean t\u1eadp hu\u1ea5n luy\u1ec7n v\xe0 t\u1eadp ki\u1ec3m th\u1eed\nY_predict_train = regr.predict(X_train)\nY_predict = regr.predict(X_test)\n")),(0,r.kt)("h2",{id:"2-l\u1ef1a-ch\u1ecdn-nh\u1eefng-\u0111\u1eb7c-tr\u01b0ng-quan-tr\u1ecdng-feature-importance"},"2. L\u1ef1a ch\u1ecdn nh\u1eefng \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng (feature importance)"),(0,r.kt)("p",null,"M\u1ed9t trong nh\u1eefng l\xed do ch\xfang m\xecnh ch\u1ecdn m\xf4 h\xecnh Random Forest \u0111\xf3 l\xe0 b\u1edfi ch\xfang ta c\xf3 th\u1ec3 d\u1ec5 d\xe0ng tr\u1ef1c quan nh\u1eefng \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng, \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u trong m\xf4 h\xecnh. \u0110\u1ec3 \u0111\xe1nh gi\xe1 \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng c\u0169ng nh\u01b0 tr\u1ef1c quan ho\xe1 th\u1ee9 t\u1ef1 quan tr\u1ecdng c\u1ee7a c\xe1c \u0111\u1eb7c tr\u01b0ng n\xe0y, ch\xfang ta c\xf3 th\u1ec3 l\xe0m nh\u01b0 sau:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# H\xe0m tr\u1ef1c quan ho\xe1 trung b\xecnh m\u1ee9c quan tr\u1ecdng c\u1ee7a c\xe1c \u0111\u1eb7c tr\u01b0ng\ndef feature_plot_importance(importance_df):\n  plt.rcParams.update({'font.size': 16})\n  plt.rcParams[\"figure.figsize\"] = (12,5)\n  fig, ax = plt.subplots()\n  x = np.arange(len(importance_df))\n  width = 0.77\n  rects1 = ax.bar(x, \n                  height = importance_df['means'], \n                  width = width, \n                  yerr = importance_df['stds'], \n                  align='center', \n                  ecolor='black', \n                  capsize=5)\n  ax.set_ylabel('Feature Importance')\n  ax.set_xticks(x)\n  ax.set_xticklabels(importance_df['feature_labels'])\n  ax.set_title('Feature Importance Initial Model')\n  plt.tight_layout()\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# \u0110\xe1nh gi\xe1 \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng tr\xean t\u1eadp hu\u1ea5n luy\u1ec7n\nperm_feature_importance = permutation_importance(regr, X_train, Y_train)\n\n# T\u1ea1o DataFrame ch\u1ee9a nh\xe3n v\xe0 trung b\xecnh, \u0111\u1ed9 l\u1ec7ch chu\u1ea9n m\u1ee9c quan tr\u1ecdng\nimportance_df = pd.DataFrame({'feature_labels': X_train.columns,\n                              'means' : perm_feature_importance['importances_mean'],\n                              'stds' : perm_feature_importance['importances_std']})\n\n# Tr\u1ef1c quan ho\xe1 trung b\xecnh m\u1ee9c quan tr\u1ecdng c\u1ee7a c\xe1c \u0111\u1eb7c tr\u01b0ng\nfeature_plot_importance(importance_df)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(306).Z,width:"843",height:"339"})),(0,r.kt)("p",null,"D\u1ef1a v\xe0o feature importance \x1dt\u1eeb m\xf4 h\xecnh Random Forest, c\xf3 th\u1ec3 th\u1ea5y ",(0,r.kt)("inlineCode",{parentName:"p"},"MedInc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"AveOccup"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"HouseAge")," l\xe0 3 \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng. Ta ho\xe0n to\xe0n c\xf3 th\u1ec3 x\xe2y d\u1ef1ng 1 m\xf4 h\xecnh Random Forest m\u1edbi v\u1edbi ch\u1ec9 nh\u1eefng \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Ch\u1ecdn l\u1ecdc nh\u1eefng \u0111\u1eb7c tr\u01b0ng c\xf3 \u0111i\u1ec3m feature importance cao\nX_train_reduced = X_train.loc[:,['MedInc','HouseAge','AveOccup']]\n\n# Kh\u1edfi t\u1ea1o m\xf4 h\xecnh Random Forest\nregr = RandomForestRegressor(max_depth = 5, random_state = 42, n_estimators = 100)\nregr.fit(X_train_reduced, Y_train)\n\nperm_feature_importance = permutation_importance(regr, X_train_reduced, Y_train)\n\n# T\u1ea1o DataFrame ch\u1ee9a nh\xe3n v\xe0 trung b\xecnh, \u0111\u1ed9 l\u1ec7ch chu\u1ea9n m\u1ee9c quan tr\u1ecdng\nimportance_df_reduced = pd.DataFrame({'feature_labels': X_train_reduced.columns,\n                                      'means' : perm_feature_importance['importances_mean'],\n                                      'stds' : perm_feature_importance['importances_std']})\n\n# Tr\u1ef1c quan ho\xe1 trung b\xecnh m\u1ee9c quan tr\u1ecdng c\u1ee7a c\xe1c \u0111\u1eb7c tr\u01b0ng\nfeature_plot_importance(importance_df_reduced)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(9673).Z,width:"843",height:"339"})),(0,r.kt)("p",null,"D\u1ef1a v\xe0o feature importance \x1dt\u1eeb m\xf4 h\xecnh Random Forest, c\xf3 th\u1ec3 th\u1ea5y ",(0,r.kt)("inlineCode",{parentName:"p"},"MedInc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"AveOccup"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"HouseAge")," l\xe0 3 \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng. Nh\u01b0ng ch\u1ec9 d\u1ef1a v\xe0o \u0111\u1eb7c tr\u01b0ng th\xec kh\xf3 c\xf3 th\u1ec3 th\u1ea5y \u0111\u01b0\u1ee3c m\u1ed1i li\xean h\u1ec7 gi\u1eefa \u0111\u1eb7c tr\u01b0ng \u0111\xf3 v\u1edbi vi\u1ec7c m\xf4 h\xecnh \u0111\u01b0a ra k\u1ebft qu\u1ea3 d\u1ef1 \u0111o\xe1n. \u0110\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\xe0y, ch\xfang ta s\u1ebd c\xf9ng nhau \u0111\u1ebfn v\u1edbi Bi\u1ec3u \u0111\u1ed3 Ph\u1ee5 thu\u1ed9c T\u1eebng ph\u1ea7n (Partial Dependence Plot)."),(0,r.kt)("h1",{id:"3-minh-h\u1ecda-c\xe1ch-t\u1ea1o-ra-bi\u1ec3u-\u0111\u1ed3-ph\u1ee5-thu\u1ed9c-t\u1eebng-ph\u1ea7n"},"3. Minh h\u1ecda c\xe1ch t\u1ea1o ra Bi\u1ec3u \u0111\u1ed3 Ph\u1ee5 thu\u1ed9c T\u1eebng ph\u1ea7n"),(0,r.kt)("h3",{id:"31-s\u1eed-d\u1ee5ng-scikit-learn"},"3.1. S\u1eed d\u1ee5ng Scikit-Learn"),(0,r.kt)("p",null,"Bi\u1ec3u \u0111\u1ed3 PDP:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"1D: bi\u1ec3u di\u1ec5n s\u1ef1 ph\u1ee5 thu\u1ed9c gi\u1eefa m\u1ee5c ti\xeau d\u1ef1 \u0111o\xe1n v\xe0 nh\u1eefng \u0111\u1eb7c tr\u01b0\u01a1ng \u0111\u01b0\u1ee3c quan t\xe2m (features of interest - nh\u1eefng \u0111\u1eb7c tr\u01b0ng \u0111\u01b0\u1ee3c l\u1ef1a ch\u1ecdn b\u1edfi feature importance)"),(0,r.kt)("li",{parentName:"ul"},"2D: bi\u1ec3u di\u1ec5n s\u1ef1 ph\u1ee5 thu\u1ed9c gi\u1eefa 2 \u0111\u1eb7c tr\u01b0ng \u0111\u01b0\u1ee3c quan t\xe2m v\xe0 t\xe1c \u0111\u1ed9ng c\u1ee7a n\xf3 l\xean m\u1ee5c ti\xeau d\u1ef1 \u0111o\xe1n")),(0,r.kt)("p",null,"Ch\xfang ta c\xf3 th\u1ec3 bi\u1ec3u di\u1ec5n bi\u1ec3u \u0111\u1ed3 n\xe0y th\xf4ng qua ",(0,r.kt)("inlineCode",{parentName:"p"},"PartialDependenceDisplay.from_estimator()")," t\u1eeb th\u01b0 vi\u1ec7n ",(0,r.kt)("inlineCode",{parentName:"p"},"sklearn.inspection"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from sklearn.inspection import PartialDependenceDisplay\n")),(0,r.kt)("p",null,"V\u1edbi bi\u1ec3u \u0111\u1ed3 DPD 1D,  ta c\xf3:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"PartialDependenceDisplay.from_estimator(regr, \n                                        X_train_reduced, \n                                        features = ['MedInc'], \n                                        percentiles = [0,1]);\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(3614).Z,width:"735",height:"327"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"PartialDependenceDisplay.from_estimator(regr, \n                                        X_train_reduced, \n                                        features = ['HouseAge'], \n                                        percentiles = [0,1]);\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(3749).Z,width:"735",height:"327"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"PartialDependenceDisplay.from_estimator(regr, \n                                        X_train_reduced, \n                                        features = ['AveOccup'], \n                                        percentiles = [0,1]);\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(3635).Z,width:"735",height:"327"})),(0,r.kt)("p",null,"V\u1edbi bi\u1ec3u \u0111\u1ed3 DPD 2D,  ta c\xf3:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"MedInc_AvcOccup_disp = PartialDependenceDisplay.from_estimator(regr, \n                                                               X_train_reduced, \n                                                               features = [(0,2)], \n                                                               percentiles = [0,1],\n                                                               grid_resolution = 20)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(6112).Z,width:"750",height:"327"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"MedInc_HouseAge_disp = PartialDependenceDisplay.from_estimator(regr, \n                                                               X_train_reduced, \n                                                               features = [(0,1)], \n                                                               percentiles = [0,1], \n                                                               grid_resolution = 20)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(5372).Z,width:"730",height:"327"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"AveOccup_HouseAge_disp = PartialDependenceDisplay.from_estimator(regr, \n                                                                 X_train_reduced, \n                                                                 features = [(2,1)], \n                                                                 percentiles = [0,1], \n                                                                 grid_resolution = 10)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(5872).Z,width:"730",height:"327"})),(0,r.kt)("p",null,"Ta ho\xe0n to\xe0n c\xf3 th\u1ec3 th\xeam c\xe1c \u0111i\u1ec3m d\u1eef li\u1ec7u v\xe0o bi\u1ec3u \u0111\u1ed3 PDP b\u1eb1ng c\xe1ch sau:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"fig, ax = plt.subplots(figsize=(12, 5))\nAveOccup_HouseAge_disp.plot(ax = ax)\nplt.scatter(X_train_reduced['AveOccup'], \n            X_train_reduced['HouseAge'],\n            alpha = 0.2, \n            color = 'black');\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(7431).Z,width:"730",height:"327"})),(0,r.kt)("h2",{id:"32-s\u1eed-d\u1ee5ng-th\u01b0-vi\u1ec7n-pdpbox"},"3.2. S\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n PDPbox"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"C\xe0i \u0111\u1eb7t th\u01b0 vi\u1ec7n: !pip install pdpbox"),(0,r.kt)("li",{parentName:"ul"},"Link: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/SauceCat/PDPbox"},"https://github.com/SauceCat/PDPbox"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from pdpbox import pdp\n")),(0,r.kt)("p",null,"C\xf3 th\u1ec3 th\u1ea5y t\u01b0\u01a1ng t\u1ef1 nh\u01b0 bi\u1ec3u \u0111\u1ed3 PDP c\u1ee7a Scikit-Learn, v\u1edbi \u0111\u1eb7c tr\u01b0ng ",(0,r.kt)("inlineCode",{parentName:"p"},"MedInc"),", gi\xe1 nh\xe0 trung b\xecnh c\u0169ng t\u0103ng khi thu nh\u1eadp trung b\xecnh t\u0103ng (v\u1edbi ",(0,r.kt)("inlineCode",{parentName:"p"},"MedInc")," l\u1edbn h\u01a1n 2). V\u1edbi thu nh\u1eadp trung b\xecnh l\u1edbn h\u01a1n kho\u1ea3ng 6, gi\xe1 nh\xe0 t\u0103ng kh\xe1 nhi\u1ec1u v\xe0 \u1ed5n \u0111\u1ecbnh. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pdp_MedInc = pdp.pdp_isolate(model=regr, \n                             dataset=X_train_reduced, \n                             model_features=X_train_reduced.columns, \n                             feature='MedInc')\nfig, axes = pdp.pdp_plot(pdp_MedInc, 'MedInc', plot_lines=True, frac_to_plot=100, plot_pts_dist=True);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"findfont: Font family ['Arial'] not found. Falling back to DejaVu Sans.\nfindfont: Font family ['Arial'] not found. Falling back to DejaVu Sans.\nfindfont: Font family ['Arial'] not found. Falling back to DejaVu Sans.\nfindfont: Font family ['Arial'] not found. Falling back to DejaVu Sans.\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(4592).Z,width:"864",height:"544"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pdp_MedInc = pdp.pdp_isolate(model=regr, \n                             dataset=X_train_reduced, \n                             model_features=X_train_reduced.columns, \n                             feature='HouseAge')\nfig, axes = pdp.pdp_plot(pdp_MedInc, 'HouseAge', plot_lines=True, frac_to_plot=100, plot_pts_dist=True);\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(2456).Z,width:"889",height:"544"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pdp_MedInc = pdp.pdp_isolate(model=regr, \n                             dataset=X_train_reduced, \n                             model_features=X_train_reduced.columns, \n                             feature='AveOccup')\nfig, axes = pdp.pdp_plot(pdp_MedInc, 'AveOccup', plot_lines=True, frac_to_plot=100, plot_pts_dist=True);\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(501).Z,width:"882",height:"544"})),(0,r.kt)("p",null,"Th\u01b0 vi\u1ec7n PDPbox c\u0169ng cung c\u1ea5p c\u1ea3 2 bi\u1ec3u \u0111\u1ed3 d\u01b0\u1edbi d\u1ea1ng 1D v\xe0 2D. Bi\u1ec1u \u0111\u1ed3 2D ph\xeda d\u01b0\u1edbi cho th\u1ea5y m\u1ed1i quan h\u1ec7 c\u1ee7a gi\xe1 nh\xe0 trung b\xecnh v\u1edbi 2 \u0111\u1eb7c tr\u01b0ng l\xe0 thu nh\u1eadp b\xecnh qu\xe2n v\xe0 \u0111\u1ed9 tu\u1ed5i c\u1ee7a nh\xe0."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"feats = ['MedInc','HouseAge']\np = pdp.pdp_interact(regr,X_train_reduced, \n                     X_train_reduced.columns, \n                     feats)\npdp.pdp_interact_plot(p,feats);\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"png",src:e(2185).Z,width:"505",height:"564"})),(0,r.kt)("p",null,"\u0110\xf3n xem nh\u1eefng tr\u1ea3i nghi\u1ec7m v\xe0 ph\xe2n t\xedch c\u1ee5 th\u1ec3 t\u1eeb Zootopi t\u1ea1i:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud83d\udc49Website: ",(0,r.kt)("a",{parentName:"li",href:"https://zootopi.dev/blog"},"https://zootopi.dev/blog")),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udc49Youtube: ",(0,r.kt)("a",{parentName:"li",href:"https://youtu.be/jCCbCPVXcpQ"},"https://youtu.be/jCCbCPVXcpQ")),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udc49Facebook: ",(0,r.kt)("a",{parentName:"li",href:"https://www.facebook.com/aizootopi"},"https://www.facebook.com/aizootopi"))))}h.isMDXComponent=!0},3614:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_13_0-fafe2d815be638f598dfbfcaa6e00831.png"},3749:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_14_0-83488264dc35eaa6099046576d54986c.png"},3635:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_15_0-b9bfe0568a4ce13d317c307edb9775e4.png"},6112:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_17_0-24f95306649bfb9b535a17a1cb359bb9.png"},5372:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_18_0-fbd74cf6f7e41f58e44b19224f674b76.png"},5872:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_19_0-2857e2874f485d688cc25df6261daa82.png"},7431:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_21_0-973f0a1aac5eaa861a8d501016a4cfc5.png"},4592:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_25_1-28075a74f10d03b89a8f1546f071f2bc.png"},2456:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_26_0-cb78ba0c8acbc7f282cebcc7691278b3.png"},501:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_27_0-6cdcc155361685da7c3d9499f1be3b89.png"},2185:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_29_0-bbb2291d3cbbca69faeb575b8e658d54.png"},306:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_6_0-fd9e9f8aefabb255e6ba0c09a028b0f3.png"},9673:(n,t,e)=>{e.d(t,{Z:()=>a});const a=e.p+"assets/images/2022-02-15-xai2-thuc-hanh_8_0-92475a9a40be1443e5defd59951ebc00.png"}}]);